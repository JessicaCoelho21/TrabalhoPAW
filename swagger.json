{
    "swagger":"2.0",
    "info":{
        "version":"1.0.0",
        "title":"COVID API",
        "description":"REST API COVID"
    },
    "host":"localhost:3000",
    "basePath": "/",
    "tags":[
        {
            "name": "Home",
            "description": "API"
        }
    ],
    "schemes":[
        "http"
    ],
    "consumers":[
        "application/json"
    ],
    "produces":[
        "application.json"
    ],
    "paths":{
        "/signup":{
            "post":{
                "tags":[
                    "Autentication"
                ],
                "description": "Creat new user in system",
                "parameters":[
                    {
                        "name": "utilizador",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema":{
                            "$ref": "#/definitions/Autentication"
                        }
                    }
                ],
                "produces":[
                    "application.json"
                ],
                "responses":{
                    "201":{
                        "description":"User adicionado com sucesso",
                        "schema":{
                            "$ref": "#/definitions/Autentication"
                        }
                    }
                }
            }
        },
            "/login":{
                "post":{
                "tags":[
                    "Autentication"
                ],
                "description": "Log the user in the system",
                "parameters":[
                    {
                        "name": "utilizador",
                        "in": "body",
                        "description": "User that we want to login",
                        "schema":{
                            "$ref": "#/definitions/Autentication"
                        }
                    }
                ],
                "produces":[
                    "application.json"
                ],
                "responses":{
                    "200":{
                        "description":"Login successful",
                        "schema":{
                            "$ref": "#/definitions/Autentication"
                        }
                    },
                    "401":{
                        "description":"Auth failed",
                        "schema":{
                            "$ref": "#/definitions/Autentication"
                            }
                        }
                    
                    }
                }
            },
                "/user/show/{userId}":{
                    "parameters":[
                        {
                            "name": "userId",
                            "in": "path",
                            "required": true,
                            "description": "Id of user that we want to find",
                            "type":"string"
                        }
                    ],
                    "get":{
                        "tags":[
                            "Users"
                        ],
                        "summary": "Get user with given Id",
                        "responses":{
                            "200":{
                                "description":"User is found",
                                "schema":{
                                    "$ref":"#/definitions/User"
                                }
                            },
                            "404":{
                                "description":"User not found",
                            "schema":{
                                "$ref":"#/definitions/User"
                            }
                        }
                        }
                    }
                },
                
                "/user/update/{userId}":{
                    "parameters":[
                        {
                            "name": "userId",
                            "in": "path",
                            "required": true,
                            "description": "Id of user that we want to find",
                            "type":"string"
                        }
                    ],
                    "put":{
                       "summary":"Update user with given Id",
                       "tags":[
                           "Users"
                        ],
                        "parameters":[
                            {
                                "name":"user",
                                "in":"body",
                                "description":"User with new values of properties",
                                "schema":{
                                    "$ref":"#/definitions/User"
                                }
                            }
                        ],
                        "responses":{
                            "":{
                                "description":"New user updated",
                                "schema":{
                                    "$ref":"#/definitions/User"
                                }
                            }
                        }
                    }
                },
                "/user/logout":{
                    "post":{
                        "tags":[
                            "Users"
                        ],
                        "description":"Logout user",
                        "parameters":[{
                            "name": "authorization",
                            "in":"header",
                            "description":"Token generated after login",
                            "schema":{
                                "$ref":"#/definitions/User"
                            }
                        }
                    ],
                    "produces":[
                        "application.json"
                    ],
                    "responses":{
                        "200":{
                            "description":"auth and token deleted",
                            "schema":{
                                "$ref":"#/definitions/User"
                                    }
                                }
                         }
                     }
                 },
                 "/user/ordertest/{userId}":{
                     "parameters":[
                         {
                             "name":"userId",
                             "in":"path",
                             "required":true,
                             "description":"Id of user that we want to find",
                            "type":"string"
                         }
                     ],
                     "put":{
                         "summary":"Update the order of the test with given Id",
                         "tags":[
                             "Users"
                         ],
                         "parameters":[
                             {
                                 "name":"orderTest",
                                 "in":"body",
                                 "description":"Order test with new values of properties",
                                 "schema":{
                                     "$ref":"#/definitions/Test"
                                 }
                             }
                         ]
                     }
                 },
                 "/technic/update/{userId}":{
                     "parameters":[
                         {
                             "name":"userId",
                             "in":"path",
                             "required":true,
                             "description":"Id of user that we want to find and update",
                             "type":"string"
                         },
                         {
                             "name":"token",
                             "in":"header",
                             "required":true,
                             "description":"Access token",
                             "type":"string"
                         }
                     ],
                     "put":{
                         "security":{
                             "barearAuth":[]
                         },
                         "summary":"Update user with given Id",
                         "tags":[
                             "Technics"
                         ],
                         "parameters":[
                             {
                                 "name":"userId",
                                 "in":"body",
                                 "description":"User with new values of properties",
                                 "schema":{
                                     "$ref":"#/definitions/User"
                                 }
                             }
                         ],
                         "responses":{
                             "200":{
                                 "description":"User updated",
                                 "schema":{
                                     "$ref":"#/definitions/User"
                                 }
                             },
                             "401":{
                                 "description":"Autentication failed",
                                 "schema":{
                                     "$ref":"#/components/responses/UnauthorizedError"
                                 }
                             }

                         }
                     }
                 }
            },
            "components":{
            "securitySchemes":{
              "bearerAuth":{
                "type": "http",
                "scheme": "bearer",
                "bearerFormat":"JWT"
              }
            },"responses":{
                "UnauthorizedError":{
                    "description":"Access token is missing or invalid"
                }
            }
        },
        "definitions":{
            "User":{
                "required":[
                    "name",
                    "username",
                    "password",
                    "role"
                ],
                "properties":{
                    "name":{
                        "type":"string",
                        "uniqueItems": true
                    },
                    "username":{
                        "type":"Number",
                        "uniqueItems": true
                    },
                    "password":{
                        "type":"string",
                        "uniqueItems": true
                    },
                    "role":{
                        "type":"string",
                        "uniqueItems": true
                    }
                }
            },
            "Tests":{
                "required":[
                    "nomeUtente"
                ],
                "properties":{
                    "nomeUtente":{
                        "type":"string"
                    },
                    "sns24":{
                        "type":"boolean"
                    },
                    "grupoRisco":{
                        "type":"boolean"
                    },
                    "trabalhoLocalRisco":{
                        "type":"boolean"
                    },
                    "prioridade": {
                        "type":"Boolean"
                    },
                    "dataPrimeiroTeste": {
                        "type": "Date"
                        },
                    "realizadoPrimeiroTeste": {
                        "type": "Boolean"
                        },
                    "primeiroResultado": {
                        "type": "Boolean"
                        },
                    "dataSegundoTeste": {
                        "type": "Date"
                        },
                    "realizadoSegundoTeste": {
                        "type": "Boolean" 
                        },
                    "segundoResultado": { 
                        "type": "Boolean" 
                    },
                    "infetado": {
                        "type": "Boolean"
                        }
                }
            }
        }
       
}
